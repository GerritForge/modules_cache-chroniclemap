{
  "comments": [
    {
      "key": {
        "uuid": "5bae3440_b22b11e0",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheConfig.java",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-09-25T11:08:22Z",
      "side": 1,
      "message": "Why do we need the assisted injection here? The assisted injected values are the one inserted by Guice and not by us in the method call, or am I missing something?",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 54,
        "endChar": 77
      },
      "revId": "78b3a3bafbb23d8ef3b81236c9a64a0f0f5c2b48",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10871e08_e7c16ae6",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheConfig.java",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-09-26T09:03:40Z",
      "side": 1,
      "message": "Yes, I did not notice that there are multiple parameters of the same type: that\u0027s why you need to add the @Assisted annotation here as well.",
      "parentUuid": "5bae3440_b22b11e0",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 54,
        "endChar": 77
      },
      "revId": "78b3a3bafbb23d8ef3b81236c9a64a0f0f5c2b48",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3cb70aaf_e8a11512",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheConfig.java",
        "patchSetId": 4
      },
      "lineNbr": 65,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-09-25T11:08:22Z",
      "side": 1,
      "message": "Who\u0027s binding those injected values?",
      "range": {
        "startLine": 61,
        "startChar": 6,
        "endLine": 65,
        "endChar": 74
      },
      "revId": "78b3a3bafbb23d8ef3b81236c9a64a0f0f5c2b48",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bdf8cb25_1cedec6d",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheConfig.java",
        "patchSetId": 4
      },
      "lineNbr": 65,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-09-26T09:03:40Z",
      "side": 1,
      "message": "I\u0027ve already answered myself :-)",
      "parentUuid": "3cb70aaf_e8a11512",
      "range": {
        "startLine": 61,
        "startChar": 6,
        "endLine": 65,
        "endChar": 74
      },
      "revId": "78b3a3bafbb23d8ef3b81236c9a64a0f0f5c2b48",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c31f93b1_87af82ed",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheFactory.java",
        "patchSetId": 4
      },
      "lineNbr": 59,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-09-25T11:08:22Z",
      "side": 1,
      "message": "I would give something more specific to this plugin, prefixing the plugin name.",
      "range": {
        "startLine": 59,
        "startChar": 36,
        "endLine": 59,
        "endChar": 45
      },
      "revId": "78b3a3bafbb23d8ef3b81236c9a64a0f0f5c2b48",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4bec0e0d_a2c2d78d",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheFactory.java",
        "patchSetId": 4
      },
      "lineNbr": 59,
      "author": {
        "id": 1015244
      },
      "writtenOn": "2020-09-28T09:37:01Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c31f93b1_87af82ed",
      "range": {
        "startLine": 59,
        "startChar": 36,
        "endLine": 59,
        "endChar": 45
      },
      "revId": "78b3a3bafbb23d8ef3b81236c9a64a0f0f5c2b48",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d32c5c6f_09fba7ed",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheFactory.java",
        "patchSetId": 4
      },
      "lineNbr": 96,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-09-26T09:03:40Z",
      "side": 1,
      "message": "Why not passing directly the PersistentCacheDef\u003c\u003e instead?",
      "range": {
        "startLine": 92,
        "startChar": 12,
        "endLine": 96,
        "endChar": 34
      },
      "revId": "78b3a3bafbb23d8ef3b81236c9a64a0f0f5c2b48",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df0bbfea_7fa90b73",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheFactory.java",
        "patchSetId": 4
      },
      "lineNbr": 96,
      "author": {
        "id": 1015244
      },
      "writtenOn": "2020-09-28T09:37:01Z",
      "side": 1,
      "message": "I am not sure if that\u0027s possible tbh.\nPassing PersistentCacheDef\u003c\u003e directly would require to make ConfigFactory\u003c\u003e generic too, which would prevent us for binding a specific instance of the factory in ChronicleMapCacheModule.\n\ni.e., this would not work anymore:\n\nfactory(ChronicleMapCacheConfig.Factory.class);\n\nIs the binding of generics factories supported by Guice?",
      "parentUuid": "d32c5c6f_09fba7ed",
      "range": {
        "startLine": 92,
        "startChar": 12,
        "endLine": 96,
        "endChar": 34
      },
      "revId": "78b3a3bafbb23d8ef3b81236c9a64a0f0f5c2b48",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0200850_afb7a5c7",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheFactory.java",
        "patchSetId": 4
      },
      "lineNbr": 96,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-09-28T12:35:45Z",
      "side": 1,
      "message": "Nevermind, it can be addressed later on as a follow-up.",
      "parentUuid": "df0bbfea_7fa90b73",
      "range": {
        "startLine": 92,
        "startChar": 12,
        "endLine": 96,
        "endChar": 34
      },
      "revId": "78b3a3bafbb23d8ef3b81236c9a64a0f0f5c2b48",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9140abdb_71ff02bb",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheFactory.java",
        "patchSetId": 4
      },
      "lineNbr": 125,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-09-25T11:08:22Z",
      "side": 1,
      "message": "This should be configurable, as different setups may have different needs on how often to schedule this. Also, in case of very large caches, they may want to do it on a cron-tab style basis.\n\nCan you check how other parts of Gerrit are doing this?",
      "range": {
        "startLine": 125,
        "startChar": 53,
        "endLine": 125,
        "endChar": 59
      },
      "revId": "78b3a3bafbb23d8ef3b81236c9a64a0f0f5c2b48",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c04b52e_5a32cf5e",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheFactory.java",
        "patchSetId": 4
      },
      "lineNbr": 125,
      "author": {
        "id": 1015244
      },
      "writtenOn": "2020-09-28T09:37:01Z",
      "side": 1,
      "message": "This is not configurable for the H2 implementation[1], so I thought to keep it KISS for chronicle-map too.\nHowever I agree with you: shall I add a TODO for this to be addressed as a follow up?\n\n[1]https://gerrit.googlesource.com/gerrit.git/+/refs/heads/master/java/com/google/gerrit/server/cache/h2/H2CacheFactory.java#129",
      "parentUuid": "9140abdb_71ff02bb",
      "range": {
        "startLine": 125,
        "startChar": 53,
        "endLine": 125,
        "endChar": 59
      },
      "revId": "78b3a3bafbb23d8ef3b81236c9a64a0f0f5c2b48",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47b9780d_4b5a804d",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheFactory.java",
        "patchSetId": 4
      },
      "lineNbr": 125,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-09-28T12:35:45Z",
      "side": 1,
      "message": "But at least I would avoid the magic numbers in the code: defining a static final with a meaningful name wouldn\u0027t hurt, is not a big effort and would make the code more readable. WDYT?",
      "parentUuid": "5c04b52e_5a32cf5e",
      "range": {
        "startLine": 125,
        "startChar": 53,
        "endLine": 125,
        "endChar": 59
      },
      "revId": "78b3a3bafbb23d8ef3b81236c9a64a0f0f5c2b48",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce71eb0a_bf1c9256",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheFactory.java",
        "patchSetId": 4
      },
      "lineNbr": 125,
      "author": {
        "id": 1015244
      },
      "writtenOn": "2020-09-28T13:56:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "47b9780d_4b5a804d",
      "range": {
        "startLine": 125,
        "startChar": 53,
        "endLine": 125,
        "endChar": 59
      },
      "revId": "78b3a3bafbb23d8ef3b81236c9a64a0f0f5c2b48",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "745c7b8b_aab70c7b",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheFactory.java",
        "patchSetId": 4
      },
      "lineNbr": 134,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-09-25T11:08:22Z",
      "side": 1,
      "message": "Why do we need to wait? The cleanup is a best-effort operation: if we don\u0027t clean up in this cycle, we\u0027ll do in the next one, isn\u0027t it?",
      "range": {
        "startLine": 134,
        "startChar": 36,
        "endLine": 134,
        "endChar": 56
      },
      "revId": "78b3a3bafbb23d8ef3b81236c9a64a0f0f5c2b48",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3dda231_ea37aa29",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheFactory.java",
        "patchSetId": 4
      },
      "lineNbr": 134,
      "author": {
        "id": 1015244
      },
      "writtenOn": "2020-09-28T09:37:01Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "745c7b8b_aab70c7b",
      "range": {
        "startLine": 134,
        "startChar": 36,
        "endLine": 134,
        "endChar": 56
      },
      "revId": "78b3a3bafbb23d8ef3b81236c9a64a0f0f5c2b48",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b8a317f9_1bbcd5b6",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheFactory.java",
        "patchSetId": 4
      },
      "lineNbr": 138,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-09-25T11:08:22Z",
      "side": 1,
      "message": "What do we expect the Gerrit admin to do as a consequence of that? Should the admin be worries? I don\u0027t believe so.",
      "range": {
        "startLine": 138,
        "startChar": 0,
        "endLine": 138,
        "endChar": 92
      },
      "revId": "78b3a3bafbb23d8ef3b81236c9a64a0f0f5c2b48",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba754824_b6aab4d3",
        "filename": "src/main/java/com/googlesource/gerrit/modules/cache/chroniclemap/ChronicleMapCacheFactory.java",
        "patchSetId": 4
      },
      "lineNbr": 138,
      "author": {
        "id": 1015244
      },
      "writtenOn": "2020-09-28T09:37:01Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b8a317f9_1bbcd5b6",
      "range": {
        "startLine": 138,
        "startChar": 0,
        "endLine": 138,
        "endChar": 92
      },
      "revId": "78b3a3bafbb23d8ef3b81236c9a64a0f0f5c2b48",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}